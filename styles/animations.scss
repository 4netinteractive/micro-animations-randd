// -- mixins
@mixin progressPercentage($progress){
	.progressbar__indicator {
    div {
      width: $progress;
      background-color: var(--blue);
      animation: fillProgressBar 10s linear infinite;

      &::after {
        content: "#{round($progress)}"
      }
    }
  }
}

.progressbar {
	@include progressPercentage(25%);
}

.btn {
  display: inline-flex;
  align-items: center;
  padding: 0.5rem 1.25rem;
  border-radius: 9999px;
  line-height: 1rem;
  font-size: .875rem;
  font-weight: 600;
  transition: all 0.3s cubic-bezier(0.22, 1, 0.36, 1);
  background-color: #fff;
  border: 2px solid var(--blue);
  text-align: center;
  cursor: pointer;
  text-transform: uppercase;
  margin-right: 10px;

  &--loading {
    background-color: var(--blue);
    color: #fff;
    
    .loader {
      animation: spinLoadingButton 1s linear infinite;
      width: 1.25rem;
      height: 1.25rem;
      margin-left: -0.25rem;
      margin-right: 0.75rem;
      color: #fff;
    }
  }

  &:focus {
    animation: addBoxShadow .3s linear;
  }
}

.input {
  display: block;
  margin-bottom: 10px;

  &--text {
    padding: 0.5rem 1.25rem;
    border-radius: 9999px;
    line-height: 1rem;
    font-size: .875rem;
    font-weight: 600;
    transition: all 0.3s ease;
    background-color: #fff;
    border: 2px solid var(--blue);

    &.--outline-normal {
      &:focus {
        outline-color: rgba(21, 156, 228, 0.4);
        animation: addOutline .3s linear;
      }
    }

    &.--outline-shadow {
      &:focus {
        outline: none;
        animation: addBoxShadow .3s linear;
      }
    }

  }

  // ----- radio 
  &--radio {
    display: flex;

    label {
      padding-left: 8px;
      font-family: sans-serif;
      line-height: 28px;
      color: var(--black);
      cursor: pointer;
      order: 2;
    }

    span {
      &::before {
        display: inline-block;
        width: 18px;
        height: 18px;
        margin-top: 4px;
        content: "";
        background-color: #fff;
        border: 2px solid #597183;
        border-radius: 100%;
        box-sizing: border-box;
        transition: box-shadow 0.3s ease;
      }
    }

    input {
      &[type="radio"] {
        position: absolute;
        width: 18px;
        height: 18px;
        cursor: pointer;
        opacity: 0;
        order: 1;

        &:checked ~ span::before {
          border: 5px solid var(--blue);
        }
        
        &:hover ~ span::before {
          border-color: var(--blue);
        }
        
        &:focus ~ span::before {
          outline: none;
          animation: addBoxShadow .3s linear;
        }
      }
    }
  }

  // ----- checkbox
  &--toggle {
    position: relative;
    display: block;

    input[type="checkbox"] {
      position: absolute;
      top: 0;
      left: 0;
      z-index: 100;
      width: 100%;
      height: 30px;
      vertical-align: middle;
      cursor: pointer;
      opacity: 0;
    }

    label {
      padding-right: 8px;
      font-family: sans-serif;
      font-size: 16px;
      line-height: 28px;
      color: var(--black);
    }

    span {
      position: relative;
      display: inline-block;
      vertical-align: middle;
      cursor: pointer;

      &::before {
        display: block;
        width: 50px;
        height: 30px;
        content: "";
        background-color: #8296a4;
        border-radius: 28px;
        transition: background-color 0.3s ease;
      }

      &::after {
        position: absolute;
        top: 1px;
        left: 1px;
        display: block;
        width: 28px;
        height: 28px;
        visibility: visible;
        content: "";
        background-color: #fff;
        border-radius: 28px;
        transition: left 0.3s ease;
      }
    }

    input {
      &[type="checkbox"] {
        &:checked ~ span:before {
          background-color: var(--blue);
        }

        &:checked ~ span:after {
          top: 1px;
          left: 21px;
        }
        
        &:hover ~ span:before {
          background-color: #3db5eb;
        }
        
        &:not(:checked):hover ~ span:before {
          background-color: #afbec9;
        }
        
        &:focus ~ span:before {
          outline: none;
          animation: addBoxShadow .3s linear;
        }
      }
    }
  }
}

// -- cursor

.cursor {
  position: absolute;
  opacity: 0;
  pointer-events: none;
  border-radius: 9999px;
  padding: 10px;
  transform: translate(-50%, -50%);
  background-color: var(--blue);
  transition: opacity .2s ease-in-out;

  &.--shadow {
    opacity: 1;
    box-shadow: 0 0 0 4px rgba(21, 156, 228, 0.4);
  }
}

// -- links
.link {
  display: inline-block;
  &.--visited {
    color: rgba(157, 43, 250, 0.322);
    text-decoration:  underline;
  }

  &.--animated {
    position: relative;
    
    &:focus,
    &:hover {
      &::after {
        width: 100%;
      }
    }

    &::after {
      content: '';
      display: block;
      left: 0;
      right: 0;
      width: 0;
      height: 1px;
      transition: width .1s cubic-bezier(0.61, 1, 0.88, 1);
      border-bottom: 2px solid rgba(21, 156, 228, 0.4);
    }
  }
}

// -- icon
.icon {
  cursor: pointer;
  width: 20px;
  &--shaking {
    &:hover {
      animation: shakeIcon 0.82s cubic-bezier(.36,.07,.19,.97) both;
      transform: translate3d(0, 0, 0);
      backface-visibility: hidden;
      perspective: 1000px;
    }
  }
}

// -- progressbar
.progressbar {
  &__indicator {
    width: 100%;
    height: 0.75em;
    background-color: rgba(0,0,0,0.1);
    overflow: hidden;
    border-radius: 25px;
  
    div {
      float: left;
      height: 1em;
      &::after {
        display: block;
        color: #fff;
        text-align: right;
        padding: 0 0.75em;
        font-size: 0.6rem;
        line-height: 1.25;
        font-weight: bold;
      }
    }
  }
}


// -- keyframes

@keyframes addBoxShadow {
  50% {
    box-shadow: 0 0 0   4px rgba(21, 156, 228, 0.4)
  }
}

@keyframes addOutline {
  50% {
    outline-width: 3px;
    outline-color: rgba(21, 156, 228, 0.4);
    outline-offset: 2px;
    outline-style: solid;
  }
}

@keyframes shakeIcon {
  10%, 90% {
    transform: translate3d(-1px, 0, 0);
  }
  
  20%, 80% {
    transform: translate3d(2px, 0, 0);
  }

  30%, 50%, 70% {
    transform: translate3d(-4px, 0, 0);
  }

  40%, 60% {
    transform: translate3d(4px, 0, 0);
  }
}

@keyframes spinLoadingButton {
  from {
      transform: rotate(0deg);
  }
  to {
      transform: rotate(360deg);
  }
}

@keyframes fillProgressBar {
  from {
    width: 25%;
  }
  to {
    width: 100%;
  }
}